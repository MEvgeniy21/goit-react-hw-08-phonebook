{"version":3,"file":"static/js/422.0cb97c3c.chunk.js","mappings":"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","sources":["components/Title/Title.styled.js","components/Title/Title.jsx","components/InputField/InputField.styled.js","components/InputField/InputField.jsx","components/ButtonSubmit/ButtonSubmit.styled.js","components/ButtonSubmit/ButtonSubmit.jsx","common/schema.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","hooks/useContacts.js","components/Filter/Filter.jsx","components/ContactContainer/ContactContainer.styled.js","components/ContactContainer/ContactContainer.jsx","page/Phonebook.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from 'common/Box';\nimport * as SC from './Title.styled';\n\nconst Title = ({ children, pt = 0, pb = 0, mt = 0, mb = 0 }) => {\n  return (\n    <Box pt={pt} pb={pb} mt={mt} mb={mb}>\n      <SC.Title>{children}</SC.Title>\n    </Box>\n  );\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  children: PropTypes.any.isRequired,\n  pt: PropTypes.number,\n  pb: PropTypes.number,\n  mt: PropTypes.number,\n  mb: PropTypes.number,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 100%;\n  border-color: ${p => (p.isError ? p.theme.colors.red : 'none')};\n`;\n","import PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport * as SC from './InputField.styled';\nimport { toast } from 'react-toastify';\n\nconst InputField = ({ name, onBlur, ...props }) => {\n  const [field, meta] = useField(name);\n\n  const handleBlur = evt => {\n    onBlur(evt);\n    if (meta.error) {\n      toast.error(meta.error);\n    }\n  };\n\n  return (\n    <>\n      <SC.Input\n        {...field}\n        {...props}\n        onBlur={handleBlur}\n        isError={meta.touched && meta.error}\n      />\n      {/* {meta.touched && meta.error && <div>{meta.error}</div>} */}\n    </>\n  );\n};\n\nInputField.propTypes = {\n  name: PropTypes.string.isRequired,\n  onBlur: PropTypes.func.isRequired,\n};\n\nexport default InputField;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  position: relative;\n  width: ${p => p.width}px;\n  height: ${p => p.height}px;\n\n  &:disabled {\n    cursor: auto;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport * as SC from './ButtonSubmit.styled';\n\nconst ButtonSubmit = ({ children, validateForm, ...props }) => {\n  const handleClick = evt => {\n    validateForm().then(value => {\n      const errors = Object.values(value);\n      if (errors.length) {\n        errors.map(error => toast.error(error));\n      }\n    });\n  };\n  return (\n    <SC.Button {...props} type=\"submit\" onClick={handleClick}>\n      {children}\n    </SC.Button>\n  );\n};\n\nButtonSubmit.propTypes = {\n  children: PropTypes.any.isRequired,\n  validateForm: PropTypes.func.isRequired,\n};\n\nexport default ButtonSubmit;\n","import * as yup from 'yup';\n\nexport let schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .min(5)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormBlock = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.black};\n  border-radius: ${p => p.theme.space[2]}px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n","import InputField from 'components/InputField';\nimport ButtonSubmit from 'components/ButtonSubmit';\nimport Loader from 'components/Loader';\nimport { Formik } from 'formik';\nimport { schema } from 'common/schema';\nimport * as SC from './ContactForm.styled';\nimport { Box } from 'common/Box';\nimport { useCheckExistingName } from 'hooks';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport { useAddContactMutation } from 'redux/contactsSlice';\n\nexport default function ContactForm() {\n  const INITIAL_VALUE = { name: '', number: '' };\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const checkExistingName = useCheckExistingName();\n  const nameID = useRef(nanoid());\n  const numberID = useRef(nanoid());\n\n  const handleSubmit = async (val, actions) => {\n    const { name, number } = val;\n    const newName = name.trim();\n    const existName = checkExistingName(newName);\n    if (existName) {\n      toast.warning(`${newName} is already in contacts`);\n      return;\n    }\n    try {\n      const { error } = await addContact({ name: newName, number });\n      if (error) {\n        toast.error(`Contact creation error`);\n      } else {\n        toast.success(`contact - \"${newName}: ${number}\" has been added`);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={INITIAL_VALUE}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      {props => (\n        <SC.FormBlock autoComplete=\"off\">\n          <SC.Label htmlFor={nameID}>\n            Name\n            <InputField\n              type=\"text\"\n              name=\"name\"\n              id={nameID}\n              disabled={isLoading}\n              onBlur={props.handleBlur}\n              required\n            />\n          </SC.Label>\n\n          <SC.Label htmlFor={numberID}>\n            Number\n            <InputField\n              type=\"tel\"\n              name=\"number\"\n              id={numberID}\n              disabled={isLoading}\n              onBlur={props.handleBlur}\n              required\n            />\n          </SC.Label>\n\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <ButtonSubmit\n              validateForm={props.validateForm}\n              width={100}\n              height={25}\n              disabled={isLoading}\n            >\n              {isLoading && <Loader width={20} />}\n              Add contact\n            </ButtonSubmit>\n          </Box>\n        </SC.FormBlock>\n      )}\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormBlock = styled(Form)`\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  gap: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.black};\n  border-radius: ${p => p.theme.space[2]}px;\n`;\n\nexport const Label = styled.label`\n  width: 65px;\n  flex-shrink: 0;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.round};\n\n  & svg {\n    width: 25px;\n    height: 25px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport InputField from 'components/InputField';\nimport ButtonSubmit from 'components/ButtonSubmit';\nimport Loader from 'components/Loader';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport { Formik } from 'formik';\nimport { schema } from 'common/schema';\nimport * as SC from './EditForm.styled';\nimport { Box } from 'common/Box';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useRef } from 'react';\nimport { toast } from 'react-toastify';\n\nconst EditForm = ({\n  id,\n  name,\n  number,\n  onEdit,\n  isLoadingEdit,\n  updateContact,\n}) => {\n  const INITIAL_VALUE = { name, number };\n  const nameID = useRef(nanoid());\n  const numberID = useRef(nanoid());\n\n  const onClose = () => {\n    onEdit(false);\n  };\n\n  const handleSubmit = async (val, actions) => {\n    const newName = val.name.trim();\n    if (newName === name && val.number === number) {\n      onClose();\n      return;\n    }\n    try {\n      const { error } = await updateContact({\n        id,\n        name: newName,\n        number: val.number,\n      });\n      if (error) {\n        toast.error(`Contact editing error`);\n      } else {\n        toast.success(`contact - \"${newName}: ${val.number}\" has been edited`);\n        onClose();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={INITIAL_VALUE}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      {props => (\n        <SC.FormBlock autoComplete=\"off\">\n          <Box width={1}>\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <SC.Label htmlFor={nameID}>Name</SC.Label>\n              <InputField\n                type=\"text\"\n                name=\"name\"\n                id={nameID}\n                disabled={isLoadingEdit}\n                onBlur={props.handleBlur}\n                required\n              />\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              <SC.Label htmlFor={numberID}>Number</SC.Label>\n              <InputField\n                type=\"tel\"\n                name=\"number\"\n                id={numberID}\n                disabled={isLoadingEdit}\n                onBlur={props.handleBlur}\n                required\n              />\n            </Box>\n          </Box>\n          <Box\n            width={50}\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"end\"\n            justifyContent=\"space-between\"\n          >\n            <SC.Button type=\"button\" onClick={onClose}>\n              <AiFillCloseCircle />\n            </SC.Button>\n            <ButtonSubmit\n              validateForm={props.validateForm}\n              width={50}\n              height={25}\n              disabled={isLoadingEdit}\n            >\n              {isLoadingEdit && <Loader width={20} />}\n              edit\n            </ButtonSubmit>\n          </Box>\n        </SC.FormBlock>\n      )}\n    </Formik>\n  );\n};\n\nEditForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  isLoadingEdit: PropTypes.bool.isRequired,\n  updateContact: PropTypes.func.isRequired,\n};\n\nexport default EditForm;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  position: relative;\n  width: ${p => p.width}px;\n  height: ${p => p.height}px;\n\n  &:disabled {\n    cursor: auto;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport Loader from 'components/Loader';\nimport EditForm from 'components/EditForm';\nimport { Box } from 'common/Box';\nimport { toast } from 'react-toastify';\nimport * as SC from './ContactItem.styled';\nimport { useState } from 'react';\nimport {\n  useDeleteContactMutation,\n  useUpdateContactMutation,\n} from 'redux/contactsSlice';\n\nexport default function ContactItem({ id, name, number }) {\n  const [isEdit, setIsEdit] = useState(false);\n  const [deleteContact, { isLoading: isLoadingDel }] =\n    useDeleteContactMutation();\n  const [updateContact, { isLoading: isLoadingEdit }] =\n    useUpdateContactMutation();\n\n  const handleDelete = async () => {\n    try {\n      const { error } = await deleteContact(id);\n      if (error) {\n        toast.error(`Contact deletion error`);\n      } else {\n        toast.success(`contact - \"${name}: ${number}\" has been deleted`);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleEdit = () => {\n    setIsEdit(true);\n  };\n\n  if (!isEdit) {\n    return (\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"start\"\n        gridGap={3}\n      >\n        <span>{name}:</span>\n        <span>{number}</span>\n        <SC.Button\n          type=\"button\"\n          width={50}\n          height={25}\n          onClick={handleEdit}\n          disabled={isLoadingEdit}\n        >\n          {isLoadingEdit && <Loader width={20} />}\n          edit\n        </SC.Button>\n        <SC.Button\n          type=\"button\"\n          width={70}\n          height={25}\n          onClick={handleDelete}\n          disabled={isLoadingDel}\n        >\n          {isLoadingDel && <Loader width={20} />}\n          delete\n        </SC.Button>\n      </Box>\n    );\n  }\n  if (isEdit) {\n    return (\n      <EditForm\n        id={id}\n        name={name}\n        number={number}\n        onEdit={setIsEdit}\n        isLoadingEdit={isLoadingEdit}\n        updateContact={updateContact}\n      />\n    );\n  }\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  margin-left: ${p => p.theme.space[5]}px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n","import ContactItem from 'components/ContactItem';\nimport Loader from 'components/Loader';\nimport { Box } from 'common/Box';\nimport { List } from './ContactList.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport default function ContactList() {\n  const { data, error, isLoading } = useContacts();\n\n  if (isLoading) {\n    return (\n      <Box position=\"relative\" width={1} height={100}>\n        <Loader />\n      </Box>\n    );\n  }\n  if (!isLoading && !error && data?.length) {\n    return (\n      <List>\n        {data.map(({ id, name, number }) => (\n          <li key={id}>\n            <ContactItem id={id} name={name} number={number} />\n          </li>\n        ))}\n      </List>\n    );\n  }\n  if (!isLoading && !error && !data?.length) {\n    return <div>Contacts not found</div>;\n  }\n  if (!isLoading && error) {\n    return <div>Сontact getting error</div>;\n  }\n}\n","import { useSelector } from 'react-redux';\nimport { selectFilters } from 'redux/selectors';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\n\nexport const useContacts = () => {\n  const { data, error, isLoading } = useGetContactsQuery();\n  const filter = useSelector(selectFilters);\n\n  const normalizedFilter = filter.search.toLowerCase();\n\n  if (!isLoading && !error) {\n    const newData = data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return { data: newData, error, isLoading };\n  }\n\n  return { data, error, isLoading };\n};\n","import { Box } from 'common/Box';\nimport { useDispatch } from 'react-redux';\nimport { setSearchFilter } from 'redux/filtersSlice';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nexport default function Filter() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterValue = searchParams.get('filter') ?? '';\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setSearchFilter(filterValue));\n  }, [dispatch, filterValue]);\n\n  const handleFilter = e => {\n    const value = e.currentTarget.value.trim();\n    setSearchParams(value ? { filter: value } : {});\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gridGap={2} mb={4}>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilter}\n        defaultValue={filterValue}\n      />\n    </Box>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  margin-top: ${p => p.theme.space[4]}px;\n`;\n\nexport const TitleSecondary = styled.h2`\n  margin-bottom: ${p => p.theme.space[5]}px;\n  font-size: ${p => p.theme.fontSizes.xm};\n`;\n","import Title from 'components/Title';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport * as SC from './ContactContainer.styled';\n\nexport default function ContactContainer() {\n  return (\n    <SC.Container>\n      <Title mb={5}>Phonebook</Title>\n      <ContactForm />\n      <SC.TitleSecondary>Contacts</SC.TitleSecondary>\n      <Filter />\n      <ContactList />\n    </SC.Container>\n  );\n}\n","import ContactContainer from 'components/ContactContainer';\n\nexport default function Phonebook() {\n  return <ContactContainer />;\n}\n"],"names":["Title","styled","p","theme","fontSizes","l","children","pt","pb","mt","mb","Box","Input","isError","colors","red","name","onBlur","props","useField","field","meta","evt","error","toast","touched","Button","width","height","validateForm","type","onClick","then","value","errors","Object","values","length","map","schema","yup","shape","matches","required","number","min","FormBlock","Form","space","borders","normal","black","Label","m","ContactForm","useAddContactMutation","addContact","isLoading","checkExistingName","useCheckExistingName","nameID","useRef","nanoid","numberID","handleSubmit","val","actions","newName","trim","console","log","resetForm","initialValues","onSubmit","validationSchema","autoComplete","htmlFor","id","disabled","handleBlur","display","alignItems","justifyContent","Loader","fontWeights","none","radii","round","onEdit","isLoadingEdit","updateContact","INITIAL_VALUE","onClose","flexDirection","ContactItem","useState","isEdit","setIsEdit","useDeleteContactMutation","deleteContact","isLoadingDel","useUpdateContactMutation","handleDelete","gridGap","List","medium","ContactList","useGetContactsQuery","data","normalizedFilter","useSelector","selectFilters","search","toLowerCase","filter","contact","includes","useContacts","position","Filter","useSearchParams","searchParams","setSearchParams","filterValue","get","dispatch","useDispatch","useEffect","setSearchFilter","onChange","e","currentTarget","defaultValue","Container","TitleSecondary","xm","ContactContainer","Phonebook"],"sourceRoot":""}